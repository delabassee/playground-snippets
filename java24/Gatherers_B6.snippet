// Distinct Parallel Gatherer
static <T> Gatherer<T, ?, T> distinct() {
   return Gatherer.of(
      () -> new HashSet<T>(),
         (set, element, _) -> {
            set.add(element);
            return true;
         },
         (set1, set2) -> {
            set1.addAll(set2);
            return set1;
         },
         (set, downstream) -> {
            set.stream()
               .takeWhile(_ -> !downstream.isRejecting())
               .forEach(downstream::push);
      }
   );
}

var stream = Stream.of(1, 1, 2, 2, 2, 3, 4, 4, 4, 5);
var result = stream.parallel().gather(distinct()).toList();
System.out.println("result = " + result);
